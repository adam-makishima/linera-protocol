syntax = "proto3";
package key_value_store.v1;

message KeyValue {
  bytes key = 1;
  bytes value = 2;
}

message Statement {
  oneof Operation {
    bytes delete = 1;
    KeyValue put = 2;
    bytes delete_prefix = 3;
  }
}

message OptValue {
  optional bytes value = 1;
  bool last_chunk = 2;
}


message RequestReadValue {
  bytes key = 1;
}

message ReplyReadValue {
  optional bytes value = 1;
}


message RequestContainsKey {
  bytes key = 1;
}

message ReplyContainsKey {
  bool test = 1;
}


message RequestReadMultiValues {
  repeated bytes keys = 1;
}

message ReplyReadMultiValues {
  repeated OptValue values = 1;
}


message RequestFindKeysByPrefix {
  bytes key_prefix = 1;
}

message ReplyFindKeysByPrefix {
  repeated bytes keys = 1;
}


message RequestFindKeyValuesByPrefix {
  bytes key_prefix = 1;
}

message ReplyFindKeyValuesByPrefix {
  repeated KeyValue key_values = 1;
}


message RequestWriteBatch {
  repeated Statement statements = 1;
}

message ReplyWriteBatch {
}


message RequestCreateNamespace {
  bytes namespace = 1;
}

message ReplyCreateNamespace {
}


message RequestExistsNamespace {
  bytes namespace = 1;
}

message ReplyExistsNamespace {
  bool exists = 1;
}


message RequestDeleteNamespace {
  bytes namespace = 1;
}

message ReplyDeleteNamespace {
}


message RequestListAll {
}

message ReplyListAll {
  repeated bytes namespaces = 1;
}


message RequestDeleteAll {
}

message ReplyDeleteAll {
}


service StoreProcessor {
  rpc ProcessReadValue (RequestReadValue) returns (stream ReplyReadValue) {}
  rpc ProcessContainsKey (RequestContainsKey) returns (ReplyContainsKey) {}
  rpc ProcessReadMultiValues (stream RequestReadMultiValues) returns (stream ReplyReadMultiValues) {}
  rpc ProcessFindKeysByPrefix (RequestFindKeysByPrefix) returns (stream ReplyFindKeysByPrefix) {}
  rpc ProcessFindKeyValuesByPrefix (RequestFindKeyValuesByPrefix) returns (stream ReplyFindKeyValuesByPrefix) {}
  rpc ProcessWriteBatch (stream RequestWriteBatch) returns (ReplyWriteBatch) {}
  rpc ProcessCreateNamespace (RequestCreateNamespace) returns (ReplyCreateNamespace) {}
  rpc ProcessExistsNamespace (RequestExistsNamespace) returns (ReplyExistsNamespace) {}
  rpc ProcessDeleteNamespace (RequestDeleteNamespace) returns (ReplyDeleteNamespace) {}
  rpc ProcessListAll (RequestListAll) returns (ReplyListAll) {}
  rpc ProcessDeleteAll (RequestDeleteAll) returns (ReplyDeleteAll) {}
}
